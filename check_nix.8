.TH CHECK_NIX 8 "October 23, 2010" "User Manuals"
.SH NAME
.PP
check_nix - Nagios/Icinga plugin to check freshness of NiX Spam
DNSBL
.SH SYNOPSIS
.PP
check_nix [-N \f[I]address\f[]] [-D \f[I]domain\f[]] [-w
\f[I]warn seconds\f[]] [-c \f[I]critical seconds\f[]] [-S
\f[I]statusfile\f[]]
.SH DESCRIPTION
.PP
(The German word "nichts", meaning "nothing", is often pronounced
as "nix" by non-native speakers\.)
.PP
\f[I]NiX Spam\f[] (i\.e\. "nothing spam" or "no spam") DNS
black-list (or block-list) created by Bert Ungerer of the German
\f[I]ix\f[] magazine\. Information on the \f[I]Nix Spam\f[] DNSBL
can be obtained at <http://goo.gl/rOxd>\. Mid October 2010 we
requested, and graciously got, a DNS TXT resource record as an
RFC 1464 (http://tools.ietf.org/html/rfc1464) string attribute
inserted into the zone apex\. This TXT RR contains a "heartbeat"
ISO 8601 timestamp which indicates the \f[I]approximate\f[] time
when the list was last updated:
.PP
\f[CR]
      60\ IN\ TXT\ "heartbeat=2010-10-25T15:46:01+02:00"
\f[]
.PP
We requested this timestamp so that zone slave servers can check
whether they are still approximately up to date with their zone
transfers; the DNSBL is updated several times per second and the
SOA serial number has no relationship to time\. Note once again,
that the heartbeat reflects the \f[I]approximate\f[] and not the
exact time of the last zone update (i\.e\. the heartbeat is updated
once a minute)\.
.PP
\f[I]check_nix\f[] is a Nagios/Icinga plugin which queries the
timestamp to check the freshness of a \f[I]Nix Spam\f[] slave\.
During a zone transfer, the master\[aq]s time stamp is transferred
along to the zone\[aq]s slave servers\. Administrators on the
slaves can now compare that time stamp to their own server time and
thus determine if zone transfers are occurring in a timely
fashion\.
.PP
\f[I]check_nix\f[] does exactly that\. It obtains the DNS TXT
resource record (RR) from a slave server and compares that to the
system time\. If the difference is larger than
\f[I]warn seconds\f[] or \f[I]critical seconds\f[],
\f[I]check_nix\f[] issues an appropriate diagnostic message and
exits with a WARNING or CRITICAL code to inform the
administrator\[aq]s monitoring interface that something is wrong\.
.SH OPTIONS
.PP
\f[I]check_nix\f[] understands the following options\. (The C
version currently supports the short options only\.)
.TP
.B -D \f[I]domain\f[], --domain=\f[I]domain\f[]
Specify the domain for which to look up the TXT record in the DNS\.
The default is \f[B]ix\.dnsbl\.manitu\.net\.\f[]\.
.RS
.RE
.TP
.B -N \f[I]nameserver\f[], --nameserver=\f[I]nameserver\f[]
Specify which name server (IP or name) to use; default is
\f[B]127\.0\.0\.1\f[]\.
.RS
.RE
.TP
.B -w \f[I]seconds\f[], --warning=\f[I]seconds\f[]
Number of seconds difference between exiting with a WARNING code;
defaults to 600 seconds (10 minutes)\.
.RS
.RE
.TP
.B -c \f[I]seconds\f[], --critical=\f[I]seconds\f[]
Number of seconds difference between exiting with a CRITICAL code;
defaults to 1800 seconds (30 minutes)\.
.RS
.RE
.TP
.B -S \f[I]filename\f[], --statusfile=\f[I]filename\f[]
The file into which \f[I]check_nix\f[] writes a verbose status code
(i\.e\. \f[B]"OK"\f[]) when it runs\. See below\. This file must be
writeable by the \f[I]check_nix\f[] process; if it cannot create or
open the file for writing, errors are silently ignored\.
.RS
.RE
.TP
.B -d, --debug
C version only: enable debugging; not generally useful\.
.RS
.RE
.SH STATUSFILE
.PP
When \f[I]check_nix\f[] runs, you can specify the name of a file
into which it writes a verbose status code (i\.e\. \f[B]"OK"\f[],
\f[B]"WARNING"\f[], \.\.\.) to indicate the status of the last
check\. An external process may monitor this file to do something
clever, such as stop a process, lock a firewall, etc\. Note that
this file must be writable by the caller\.
.PP
Example:
.PP
\f[CR]
      $\ rm\ /tmp/nix\.status
      $\ check_nix\ -S\ /tmp/nix\.status
      DNSBL\ last\ updated\ on\ slave\ [192\.168\.1\.20]\ \ 0\ days,\ 00:00:20\ ago
      $\ cat\ /tmp/nix\.status
      OK
      $
\f[]
.PP
The reason this was implemented is that since a DNSBL can cause
e-mail to be blocked, we believe it is better to have a name server
\f[I]not\f[] answer than answer incorrectly\. In other words, what
you may wish to do is to have an external process periodically
verify whether the DNSBL slave is running smoothly, and if it
isn\[aq]t kill off the name server until an operator has checked
and fixed the problem\.
.SH BUGS
.PP
Yes\.
.PP
If the clocks on the master and slave servers are askew in as much
as the master\[aq]s clock is further than the slave\[aq]s, results
are pretty unpredictable; \f[I]check_nix\f[] will currently return
an OK status\.
.PP
We know of at least one platform on which \f[B]getaddrinfo\f[](3)
behaves incorrectly with a loopback address (\f[B]127\.0\.0\.1\f[])
and a running \f[B]nscd\f[](8): if you experience difficulties
using \f[B]check_nix\ -N\ 127\.0\.0\.1\f[] (the default), either
disable the latter or use \f[B]localhost\f[]\.
.SH RETURN CODES
.PP
\f[I]check_nix\f[] exits with a code 0, 1, or 2 indicating a status
of OK, WARNING, or CRITICAL\. A code of 3 (UNKNOWN) indicates a
problem during the DNS lookup, and the diagnostic message contains
further information\.
.SH AVAILABILITY
.PP
<http://github.com/jpmens/check_nix>
.SH CREDITS
.IP \[bu] 2
The C version of this product includes software developed by the
Kungliga Tekniska Hvgskolan and its contributors\.
.IP \[bu] 2
The C version of this program contains date functions shamelessly
swiped from
<http://pleac.sourceforge.net/pleac_cposix/datesandtimes.html>
.SH AUTHOR
.PP
Jan-Piet Mens <http://mens.de>
.SH SEE ALSO
.PP
\f[B]resolver\f[](5)\.
.SH AUTHOR
Jan-Piet Mens
